---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: rpm --import
  rpm_key:
    key: "{{ item.key }}"
    fingerprint: "{{ item.fingerprint }}"
    state: "{{ item.state }}"
  loop: "{{ _rpm_key }}"
  register: result
  until: result is succeeded

- name: download archive
  shell: |
    set -euo pipefail
    TMP_DIR="$(mktemp -d)" \
      && cd $TMP_DIR \
      && mkdir -p ./{{ item.dest | dirname }} \
      && curl -skL -m 300 {{ item.url }} > ./{{ item.dest }} \
      && echo -n "{{ item.sha256sum }} ./{{ item.dest }}" | sha256sum -c - \
      && mkdir -p {{ item.dest | dirname }} \
      && mv ./{{ item.dest }} {{ item.dest }} \
      && rm -rf $TMP_DIR
  args:
    executable: "/bin/bash"
    creates: "{{ item.dest | dirname }}"
  loop: "{{ _rpm_download }}"
  register: result
  until: result is succeeded

- name: dnf install
  shell: |
    set -euo pipefail
    exec &> >(tee -a {{ item.dest }}.log)
    dnf install -y {{ item.dest }}
  args:
    executable: "/bin/bash"
    creates: "{{ item.dest }}.log"
  loop: "{{ _rpm_download }}"
  changed_when: false
  failed_when: false

- name: dnf config-manager
  command: dnf config-manager --set-{{ item.state }} {{ item.name }}
  loop: "{{ _dnf_config_manager }}"
  changed_when: false
  failed_when: false

- name: disable zchunk
  ini_file:
    path: "/etc/dnf/dnf.conf"
    section: "main"
    option: "zchunk"
    value: "False"
    mode: "0644"
    no_extra_spaces: true
    state: "present"
  changed_when: false
  failed_when: false

- name: rpm -e --nodeps coreutils-single
  shell: |
    set -euo pipefail
    rpm -e --nodeps coreutils-single
  args:
    executable: "/bin/bash"
  changed_when: false
  failed_when: false

- name: dnf install
  dnf:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    enablerepo: "{{ item.enablerepo | default(None) or omit }}"
  loop: "{{ _dnf }}"
  register: result
  until: result is succeeded
